% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/opq.R
\name{overpass_trim}
\alias{overpass_trim}
\title{overpass_trim}
\usage{
overpass_trim(opq, osm_area = NULL, id = NULL, type = NULL)
}
\arguments{
\item{opq}{An \code{overpass_query} object}

\item{osm_area}{A data.frame with bounding polygon obtained with
\code{getbb (..., format_out = "data.frame")}.}

\item{id}{Alternatively, bounding polygon can be specified by providing
OSM object ID or list of IDs. Each of these objects must form closed polygon.}

\item{type}{Type of OSM object or vector of types matching ids in \code{id};
either \code{way} or \code{relation}. Must be set when using \code{id}.}
}
\value{
\link{opq} object
}
\description{
Retrive osm data within a bounding polygon insted of bbox.
}
\note{
Restricts returned elemts to those that are found within defined area.
This can be provided by OSM IDs and their type, or by providing data.frame
returned by \link{getbb}.
If multiple areas are provided in \code{osm_area}, only the first one will be used.
}
\section{\code{overpass_trim} vs \code{trim_osmdata}}{

overpass_trim allows filtering objects that are found within area defined by another object(s).
This object can be either any closed 'way' or certain 'relations' such as multipolygons,
admiinistrative boundaries. See Overpass documentation for more details.

trim_osmdata trims downloaded data with user defined polyon or one returned by \link{getbb}
}

\examples{
\dontrun{
a <- getbb("portsmouth usa", format_out = "data.frame")
q <- opq() \%>\%
        add_osm_feature(key = "amenity",
                        value = "restaurant") \%>\%
        overpass_trim(osm_area = a) \%>\%
        osmdata_sf()

q <- opq() \%>\%
       add_osm_feature(key = "natural",
                       value = "tree") \%>\%
       overpass_trim(id = c(11597767, 43437030), 
                     type = c("relation", "way") ) \%>\%
       osmdata_sf()
}
}
\references{
\url{https://wiki.openstreetmap.org/wiki/Overpass_API/Overpass_QL#By_area_.28area.29}
}
\seealso{
\link{trim_osm_data}

Other queries: 
\code{\link{add_osm_features}()},
\code{\link{add_osm_feature}()},
\code{\link{bbox_to_string}()},
\code{\link{getbb}()},
\code{\link{opq_around}()},
\code{\link{opq_enclosing}()},
\code{\link{opq_osm_id}()},
\code{\link{opq_string}()},
\code{\link{opq}()},
\code{\link{overpass_status}()}
}
\concept{queries}
